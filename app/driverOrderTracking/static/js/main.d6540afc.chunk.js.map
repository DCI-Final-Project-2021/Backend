{"version":3,"sources":["pages/Login.jsx","components/MenuItems.jsx","components/Dropdown.jsx","components/NavBar.jsx","components/DriverCard.jsx","api/fetchDataFromDB.js","components/ModalForDrivers.jsx","components/Orders/ModalForOrders.jsx","lib/date.js","components/Orders/OrderInfo.jsx","components/Orders/ClientInfo.jsx","components/Orders/DriverInfo.jsx","components/Orders/OrderCard.jsx","components/NoOrdersToDisplay.jsx","pages/Home.jsx","components/SearchSomething.jsx","pages/Orders.jsx","components/newDriver/NewDriverAvatar.jsx","pages/NewUser.jsx","components/IsDriverWorking.jsx","pages/SelectDrivers.jsx","components/Summary/AllDayInfo.jsx","components/Summary/DeliveryDetail.jsx","components/Summary/DriverDetail.jsx","components/Summary/DriverList.jsx","pages/Summary.jsx","pages/Register.jsx","pages/Admin.jsx","App.js","index.js"],"names":["Login","setIsLogin","useState","email","setEmail","password","setPassword","options","method","body","JSON","stringify","headers","credentials","className","src","alt","onSubmit","e","preventDefault","fetch","then","result","ok","localStorage","setItem","status","toast","error","type","placeholder","name","required","value","onChange","target","theme","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","MenuItems","title","path","Dropdown","closeMobileMenu","click","setClick","onClick","map","item","index","to","Navbar","isLogin","dropdown","setDropdown","DriverCard","driver","key","addDrivertoOrder","img","width","height","size","color","user","fetchDataFromDB","url","a","response","json","jsonData","console","log","postDataFromDB","putDataFromDB","api","ModalForDrivers","props","drivers","setDrivers","useEffect","workingDrivers","filter","isWorking","selectedOrder","_id","callTheApi","success","toastId","onHide","Modal","centered","Header","closeButton","Title","id","length","Body","style","minHeight","i","textAlign","limit","ModalForOrders","foods","food","category","price","count","slice","date","localDate","Date","toLocaleString","timeZone","hour12","hour24","hour","OrderInfo","order","setOrderModalShow","setSelectedOrder","push","join","makeFood","total","ClientInfo","customerId","surname","address","tel","DriverInfo","setModalShow","isDelivered","OrderCard","orderInfo","modalShow","orderModalShow","show","NoOrdersToDisplay","socket","io","Home","setOrderInfo","deliveredOrders","reverse","on","data","prevOrderInfo","info","socketFunc","SearchSomething","searchItem","setSearchItem","Orders","getOrderData","filteredOrders","Object","values","toLowerCase","includes","NewDriverAvatar","onImageSelect","file","setFile","accept","event","URL","createObjectURL","files","htmlFor","fontSize","INITIAL_USER","city","NewUser","newUser","newUsersInfo","setNewUsersInfo","selectedImg","setSelectedImg","imgRef","useRef","isUser","uploadImg","image","formData","FormData","append","Axios","post","addANewUser","isFieldsMissing","keys","some","fetchUrl","current","err","autoComplete","defaultChecked","IsDriverWorking","callTheDriversApi","filteredDrivers","lengthOfFilteredDrivers","handleWorkingSituation","SelectDrivers","AllDayInfo","reduce","previousValue","currentValue","parseInt","deliveries","subtotal","delivery","DeliveryDetail","display","DriverDetail","DriverList","newDrivers","showDetailsOfDriver","Summary","workedDrivers","Register","history","useHistory","isAdmin","Admin","NavBar","exact","App","lcSt","parse","getItem","checkAuth","token","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6540afc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Login({ setIsLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // MAIN\n  const url = `/users/login`;\n\n  // DEV\n  // const url = `http://localhost:2005/users/login`;\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-type\": \"application/json\", // The type of data you're sending\n    },\n    credentials: 'include',\n  };\n  const isAdmin = () => {\n    fetch(url, options).then(result => {\n      if (result.ok) {\n        setIsLogin(true);\n        localStorage.setItem(\"isLoggedIn\", JSON.stringify(true));\n        <Redirect to=\"/selectdrivers\" />;\n      } else if (result.status === 401) {\n        setIsLogin(false);\n        toast.error(\"Username or password is incorrect.\");\n        return\n      }\n    });\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setEmail(\"\");\n    setPassword(\"\");\n    isAdmin();\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"logo\">\n        <img src={\"/images/login_logo.png\"} alt=\"delivery_logo\" />\n      </div>\n      <h1>Driver &amp; Order <br />Tracking</h1>\n\n      <form onSubmit={submitForm}>\n        <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n        <input type=\"submit\" className=\"loginButton\" value=\"Login\" />\n      </form>\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  )\n}\n\nexport default Login;\n","export const MenuItems = [\n  {\n    name: \"User\",\n    title: \"New Admin\",\n    path: \"/newuser\",\n  },\n  {\n    name: \"Driver\",\n    title: \"New Driver\",\n    path: \"/newdriver\",\n  },\n  // {\n  //   name: \"Staff\",\n  //   title: \"New Staff\",\n  //   path: \"/newdriver\",\n  //   fetch: \"users\" // burasi sikintili\n  // }\n];\n","import React, { useState } from \"react\";\nimport { MenuItems } from \"./MenuItems\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dropdown({ closeMobileMenu }) {\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return (\n    <ul\n      onClick={handleClick}\n    >\n      {MenuItems.map((item, index) => {\n        return (\n          <li key={index}>\n            <Link\n              to={item.path}\n              onClick={() => {\n                closeMobileMenu();\n              }}\n            >\n              {item.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Dropdown from \"./Dropdown\";\n\nfunction Navbar({ click, setClick, isLogin, setIsLogin }) {\n  const [dropdown, setDropdown] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => {\n    setClick(false);\n    setDropdown(false);\n  };\n\n  const toggleDropdown = () => {\n    setDropdown(!dropdown);\n  }\n\n  const logoutUser = () => {\n    localStorage.setItem(\"isLoggedIn\", JSON.stringify(false))\n    setIsLogin(false);\n  }\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\" className=\"nav-logo\" onClick={closeMobileMenu}>\n          Order Tracking\n          <i className=\"fas fa-shipping-fast\"></i>\n        </Link>\n\n        <div className=\"menu-icon\" onClick={handleClick}>\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n        </div>\n\n        <div className=\"menu\">\n          <ul className={click ? \"menu__ul active\" : \"menu__ul\"}>\n            <li>\n              <Link to=\"/\" onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"/selectdrivers\" onClick={closeMobileMenu}>\n                Select Driver\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"/orders\" onClick={closeMobileMenu}>\n                Orders\n              </Link>\n            </li>\n\n            {isLogin && (\n              <li>\n                <Link to=\"/summary\" onClick={closeMobileMenu}>\n                  Summary\n                </Link>\n              </li>\n            )\n            }\n\n            {isLogin ?\n              (\n                <>\n                  <li onClick={toggleDropdown}>\n                    {/* <Link to=\"#\" onClick={closeMobileMenu}> */}\n                    <Link to=\"#\" >\n                      <i className=\"fas fa-user-plus\"></i>\n                    </Link>\n                    <div className=\"dropdown\" >\n                      {dropdown && <Dropdown closeMobileMenu={closeMobileMenu} />}\n                    </div>\n                  </li>\n                  <li>\n                    <Link to=\"/\" onClick={logoutUser}>\n                      <i className=\"fas fa-sign-out-alt\"></i>\n                    </Link>\n                  </li>\n                </>\n              )\n              :\n              (\n                <Link to=\"/login\" onClick={closeMobileMenu}>\n                  Login\n                </Link>\n              )\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BsFillPersonFill } from \"react-icons/bs\";\n\nfunction DriverCard({ driver, key, addDrivertoOrder }) {\n  return (\n    <div\n      className=\"driverCard\"\n      key={key}\n      onClick={() => addDrivertoOrder(driver)}\n    >\n      <div className=\"driverPhoto\">\n        {driver.img ? (\n          <img width=\"60px\" height=\"70px\" src={driver.img} alt=\"\" />\n        ) : (\n          <BsFillPersonFill size=\"2em\" color=\"black\" />\n        )}\n      </div>\n      <div className=\"info\">\n        <p>Name : {driver.user.name} </p>\n        <p>Status : {driver.status} </p>\n      </div>\n    </div>\n  );\n}\n\nexport default DriverCard;\n","const fetchDataFromDB = async function (url) {\n  try {\n    const options = {\n      credentials: 'include',\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst postDataFromDB = async function (url, body) {\n  try {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      credentials: 'include',\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst putDataFromDB = async function (email) {\n  try {\n    // MAIN\n    const url = `/users/${email}`;\n    \n    // DEV\n    // const url = `http://localhost:2005/users/${email}`;\n    const options = {\n      method: \"PUT\",\n      body: \"\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      }\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst api = {\n    fetchDataFromDB,\n    postDataFromDB,\n    putDataFromDB\n}\n\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport DriverCard from \"./DriverCard\";\nimport api from \"../api/fetchDataFromDB\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction ModalForDrivers(props) {\n  const [drivers, setDrivers] = useState([]);\n\n  const callTheDriversApi = () => {\n\n    // MAIN\n    const url = `/drivers`;\n\n    // DEV\n    // const url = `http://localhost:2005/drivers`;\n\n    api.fetchDataFromDB(url).then((result) => {\n      const workingDrivers = result.filter(\n        (value, index) => value.isWorking === true\n      );\n      setDrivers(workingDrivers);\n    });\n  }\n\n  useEffect(() => {\n    callTheDriversApi();\n  }, []);\n\n  const addDrivertoOrder = (driver) => {\n    // Burada hem driver hem de order güncelleniyor.\n    // MAIN\n    const url = `/orders/${props.selectedOrder._id}/${driver._id}`;\n\n    // DEV\n    // const url = `http://localhost:2005/orders/${props.selectedOrder._id}/${driver._id}`;\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\", // The type of data you're sending\n      },\n    };\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((result) => {\n        props.callTheApi();\n        const customId = \"custom-id-assign\";\n        toast.success(\" Driver Has Assigned to Order...\", {\n          toastId: customId,\n        });\n        // console.log(result);\n      });\n    props.onHide();\n  };\n\n  return (\n    <>\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Select a Driver\n          </Modal.Title>\n        </Modal.Header>\n        {drivers.length !== 0 ?\n          <Modal.Body style={{ minHeight: \"40vh\" }}>\n            {props.selectedOrder.driver == null\n              ? drivers.map((driver, i) => {\n                return (\n                  <DriverCard\n                    driver={driver}\n                    key={i}\n                    addDrivertoOrder={addDrivertoOrder}\n                  />\n                );\n              })\n              : drivers\n                .filter((value) => value._id !== props.selectedOrder.driver._id)\n                .map((driver, i) => {\n                  return (\n                    <DriverCard\n                      driver={driver}\n                      key={i}\n                      addDrivertoOrder={addDrivertoOrder}\n                    />\n                  );\n                })}\n          </Modal.Body>\n          :\n          <Modal.Body style={{ minHeight: \"25vh\" }}>\n            <p style={{ textAlign: \"center\" }}>There are no drivers yet.</p>\n          </Modal.Body>\n        }\n      </Modal>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        limit={1}\n      />\n    </>\n  );\n}\n\nexport default ModalForDrivers;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction ModalForOrders(props) {\n  return (\n    <>\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Order Detail\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{minHeight:\"40vh\"}}>\n          <table>\n            <tr>\n              <th>No</th>\n              <th>Food</th>\n              <th>Category</th>\n              <th>Price</th>\n              <th>Count</th>\n              <th>Subtotal</th>\n            </tr>\n            {props.selectedOrder._id &&\n              props.selectedOrder.foods.map((food, i) => {\n                return (\n                  <>\n                    <tr>\n                      <td>{i + 1}.</td>\n                      <td>{food.name}</td>\n                      <td>{food.category}</td>\n                      <td>{food.price}</td>\n                      <td>{food.count}</td>\n                      <td>{food.count * food.price.slice(0, -1) * 1}€</td>\n                      {/* total += item.count * (item.price.slice(0, -1) * 1); */}\n                    </tr>\n                  </>\n                )\n              })\n            }\n          </table>\n        </Modal.Body>\n      </Modal>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        limit={1}\n      />\n    </>\n  );\n}\n\nexport default ModalForOrders;\n","const getLocalDate = (date) => {\n  let orderDateObj = new Date(date);\n  let localDate = orderDateObj.toLocaleString(\"en-US\", {\n    timeZone: \"Europe/Berlin\",\n    hour12: false,\n  });\n\n  // let\tdayOfMonth = objToday.getUTCDate() < 10 ? '0' + objToday.getUTCDate() : objToday.getUTCDate();\n  // let\tMonth = objToday.getUTCMonth() + 1;\n  // let Year = objToday.getUTCFullYear();\n  // let Hour = objToday.getUTCHours() < 10 ? \"0\" + objToday.getUTCHours() : objToday.getUTCHours();\n  // let Minute = objToday.getUTCMinutes() < 10 ? \"0\" + objToday.getUTCMinutes() : objToday.getUTCMinutes();\n\n  // let today = `${Hour}:${Minute} - ${dayOfMonth}/${Month}/${Year}`;\n\n  // const date = new Date();\n\n  // console.log(date.toString())\n  // console.log(date.toISOString())\n\n  // return date.toISOString();\n  let hour24 = localDate.slice(12, 14);\n  let hour = hour24 === \"24\" ? \"00\" : hour24;\n  let result =\n    localDate.slice(3, 6) +\n    localDate.slice(0, 3) +\n    localDate.slice(6, 12) +\n    hour +\n    localDate.slice(14, -3);\n  return result;\n};\n\nexport default { getLocalDate };\n","import React from 'react'\nimport date from \"../../lib/date.js\";\n\nfunction OrderInfo({ order, setOrderModalShow, setSelectedOrder }) {\n\n    const selectOrderFunc = () => {\n        setOrderModalShow(true);\n        setSelectedOrder(order);\n    }\n\n    const makeFood = (order) => {\n        const food = [];\n        order.foods.map(item => {\n            return food.push(item.name);\n        })\n\n        let result = food.join(\", \");\n        if (result.length > 20) {\n            result = result.slice(0, 20) + \"...\";\n            console.log(\"make food result\", result)\n            return result\n        }\n        return result\n    }\n\n    return (\n        <div className=\"orderInfo\" onClick={selectOrderFunc}>\n            <h4>Order Information</h4>\n            <p>Foods: {makeFood(order)}</p>\n            <p className=\"date\">{date.getLocalDate(order.date)}</p>\n            {/* <p>Price: {order.total}€</p> */}\n            <p>{order.total}€</p>\n        </div>\n    )\n}\n\nexport default OrderInfo\n","import React from 'react'\n\nfunction ClientInfo({ order }) {\n    return (\n        <div className=\"clientInfo\">\n            <h4>Client Information</h4>\n            <p>Name: {order.customerId.user.name} {order.customerId.user.surname} </p>\n            <p>Address: {order.customerId.user.address} </p>\n            <p>Phone: {order.customerId.user.tel} </p>\n        </div>\n    )\n}\n\nexport default ClientInfo\n","import React from 'react';\nimport { GiHotMeal } from \"react-icons/gi\";\nimport { FaShippingFast } from \"react-icons/fa\";\nimport { GrCompliance } from \"react-icons/gr\";\n\nfunction DriverInfo({ order, setModalShow, setSelectedOrder }) {\n    \n    const selectOrderFunc = () => {\n        setModalShow(true);\n        setSelectedOrder(order);\n    }\n\n    return (\n        <div className=\"driverInfo\" onClick={order.isDelivered ? () => null : selectOrderFunc}>\n            <div className=\"img\">\n                {order.isDelivered ? (\n                    <GrCompliance />\n                ) : order.driver ? (\n                    <FaShippingFast />\n                ) : (\n                    <GiHotMeal />\n                )}\n            </div>\n            <p>\n                {order.driver === null\n                    ? \"There is no driver yet!\"\n                    : `Driver: ${order.driver.user.name}`}\n            </p>\n        </div>\n    )\n}\n\nexport default DriverInfo\n","import React, { useState } from \"react\";\nimport ModalForDrivers from \"../ModalForDrivers\";\nimport ModalForOrders from \"../Orders/ModalForOrders\";\nimport OrderInfo from \"./OrderInfo\";\nimport ClientInfo from \"./ClientInfo\";\nimport DriverInfo from \"./DriverInfo\";\n\nfunction OrderCard({ orderInfo, callTheApi }) {\n  \n  const INITIAL_ORDER = { driver: { _id: \"\" }};\n  const [modalShow, setModalShow] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(INITIAL_ORDER);\n  \n  const [orderModalShow, setOrderModalShow] = useState(false);\n  return (\n    <>\n      {orderInfo\n        .map((order, i) => {\n          return (\n            <div key={i} className=\"orderCard\">\n              <OrderInfo order={order} setOrderModalShow={setOrderModalShow} setSelectedOrder={setSelectedOrder} />\n              <ClientInfo order={order} />\n              <DriverInfo order={order} setModalShow={setModalShow} setSelectedOrder={setSelectedOrder} />\n            </div>\n          );\n        })\n      }\n      <div className=\"modalWindows\">\n        <ModalForDrivers\n          callTheApi={callTheApi}\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          selectedOrder={selectedOrder}\n        />\n      </div>\n      <div className=\"modalWindows\">\n        <ModalForOrders\n          show={orderModalShow}\n          onHide={() => setOrderModalShow(false)}\n          selectedOrder={selectedOrder}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default OrderCard;\n","import React from \"react\";\n\nfunction NoOrdersToDisplay() {\n  return (\n    <div className=\"noOrdersToDisplay\">\n      <h5> There are currently no orders to display... </h5>\n      <img src=\"/images/noData.jpg\" alt=\"noOrder\" />\n    </div>\n  );\n}\n\nexport default NoOrdersToDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport OrderCard from \"../components/Orders/OrderCard.jsx\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport NoOrdersToDisplay from \"../components/NoOrdersToDisplay.jsx\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { io } from \"socket.io-client\";\n\n// let socket = io(\"http://localhost:2005\");\nlet socket = io();\n\nfunction Home({ click }) {\n  const [orderInfo, setOrderInfo] = useState([]);\n\n  const socketFunc = (order) => {\n    setOrderInfo((prevOrderInfo) => [order, ...prevOrderInfo]);\n    const customId = \"custom-id-newOrder\";\n    toast.info(\"You have a new Order..\", {\n      toastId: customId,\n    });\n  }\n\n  const callTheApi = () => {\n    // MAIN\n    const url = `/orders`;\n\n    // DEV\n    // const url = `http://localhost:2005/orders`;\n\n    api.fetchDataFromDB(url).then((result) => {\n      const deliveredOrders = result.filter(\n        (value, index) => value.isDelivered === false\n      );\n      setOrderInfo(deliveredOrders.reverse());\n    });\n  };\n\n  useEffect(() => {\n    callTheApi();\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"test\", (data) => {\n      console.log(\"test data\", data);\n    })\n    socket.on('cart', (order) => {\n      socketFunc(order);\n      console.log(\"socket socket\");\n    });\n  }, []);\n\n  return (\n    <div className={click && \"hide\"}>\n      {orderInfo.length === 0 ?\n        (\n          <NoOrdersToDisplay />\n        )\n        :\n        (\n          <OrderCard orderInfo={orderInfo} callTheApi={callTheApi} />\n        )\n      }\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        limit={1}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction SearchSomething({ searchItem, setSearchItem }) {\n  return (\n    <div className=\"search__container\">\n      <i className=\"fas fa-search\"></i>\n      <input\n        type=\"text\"\n        placeholder=\"Search..\"\n        value={searchItem}\n        onChange={(e) => setSearchItem(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default SearchSomething;","import React, { useEffect, useState } from \"react\";\nimport OrderCard from \"../components/Orders/OrderCard.jsx\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport NoOrdersToDisplay from \"../components/NoOrdersToDisplay.jsx\";\nimport SearchSomething from \"../components/SearchSomething.jsx\";\n\nfunction Orders({click}) {\n  const [orderInfo, setOrderInfo] = useState([]);\n  const [searchItem, setSearchItem] = useState(\"\");\n\n  // MAIN\n  const url = `/orders`;\n\n  // DEV\n  // const url = `http://localhost:2005/orders`;\n\n  const getOrderData = () => {\n    api.fetchDataFromDB(url).then((result) => {\n      const deliveredOrders = result.filter(\n        (value, index) => value.isDelivered === true\n      );\n      setOrderInfo(deliveredOrders);\n    });\n\n  }\n  useEffect(() => {\n    getOrderData();\n  }, []);\n\n  useEffect(() => {\n    if (searchItem !== \"\") {\n      const filteredOrders = orderInfo.filter((order) => {\n        return Object.values(order.customerId.user)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchItem.toLowerCase());\n      });\n      setOrderInfo(filteredOrders);\n    } \n    else {\n      getOrderData();\n    }\n  }, [searchItem]);\n\n  return (\n    <div className={click && \"hide\"}>\n      <SearchSomething searchItem={searchItem} setSearchItem={setSearchItem} />\n      {orderInfo.length === 0 ?\n        (\n          <NoOrdersToDisplay />\n        )\n        :\n        (\n          <div>\n            <OrderCard orderInfo={orderInfo} />\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { FiUpload } from \"react-icons/fi\";\n\nfunction NewDriverAvatar({ onImageSelect }) {\n  const [file, setFile] = useState(null);\n\n  const onImageChange = (event) => {\n    const url = URL.createObjectURL(event.target.files[0]);\n    setFile(url);\n    onImageSelect(event.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"avatar-upload\">\n        <div className=\"avatar-edit\">\n          <input\n            type=\"file\"\n            id=\"imageUpload\"\n            accept=\".png, .jpg, .jpeg\"\n            onChange={onImageChange}\n          />\n          <label htmlFor=\"imageUpload\">\n            <FiUpload fontSize=\"20px\" />\n          </label>\n        </div>\n\n        <div className=\"avatar-preview\">\n          <div id=\"imagePreview\">\n            <img src={file ?? \"/images/avatar.jpeg\"} alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewDriverAvatar;\n","import React, { useState, useRef } from \"react\";\nimport api from \"../api/fetchDataFromDB\";\nimport NewDriverAvatar from \"../components/newDriver/NewDriverAvatar\";\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst INITIAL_USER = {\n  name: \"\",\n  surname: \"\",\n  email: \"\",\n  tel: \"\",\n  address: \"\",\n  city: \"\",\n  type: \"Staff\",\n};\n\nfunction NewUser({ newUser }) {\n  const [newUsersInfo, setNewUsersInfo] = useState(INITIAL_USER);\n  const [selectedImg, setSelectedImg] = useState(null); // Image that user selected (local)\n  const imgRef = useRef(null); // URL from Cloudinary\n  const [password, setPassword] = useState(\"\");\n  const isUser = newUser.name === \"User\" ? true : false;\n\n  const uploadImg = (image) => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", \"dmcrz5sg\");\n\n    return Axios.post(\n      \"https://api.cloudinary.com/v1_1/driverandordertracking/image/upload\",\n      formData\n    );\n  };\n  const addANewUser = async (e) => {\n    e.preventDefault();\n    const isFieldsMissing = Object.keys(INITIAL_USER).some(\n      (key) => newUsersInfo[key] === \"\"\n    );\n\n    if (isUser && (isFieldsMissing || password === \"\")) {\n      toast.error(\" All fields are required...\");\n      return;\n    } else if (!isUser && (isFieldsMissing || !selectedImg)) {\n      toast.error(\" All fields are required...\");\n      return;\n    }\n\n    try {\n      const fetchUrl = newUser.name === \"Driver\" ? \"drivers\" : newUsersInfo.type === \"Admin\" ? \"users/admin\" : \"users/register\";\n\n      // MAIN\n      const url = `/${fetchUrl}`;\n      \n      // DEV\n      // const url = `http://localhost:2005/${fetchUrl}`;\n\n      if (!isUser && !imgRef.current) {\n        imgRef.current = (await uploadImg(selectedImg)).data.url;\n      }\n      const body = isUser\n        ? { ...newUsersInfo, password }\n        : { ...newUsersInfo, img: imgRef.current };\n\n      //Send all data to Database\n      api.postDataFromDB(url, body).then((result) => {\n        // isUser ?\n        //   api.putDataFromDB(result.email)\n        //   :\n        // console.log(result);\n      });\n\n      toast.success(`New ${newUser.name} added successfully..`);\n    } catch (err) {\n      console.log({ err });\n    }\n\n    if (isUser) {\n      setNewUsersInfo(INITIAL_USER);\n      setPassword(\"\");\n    } else {\n      setNewUsersInfo(INITIAL_USER);\n    }\n  };\n\n  return (\n    <div className=\"newUser__container\">\n      <form onSubmit={addANewUser} autoComplete=\"off\">\n        <h2>Add a new {newUser.name}</h2>\n        {isUser ? (\n          <div className=\"newUser__userType\"\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, type: e.target.value })\n            }\n          >\n            User type:\n            <input type=\"radio\" value=\"Staff\" name=\"newUser\" defaultChecked /> Staff\n            <input type=\"radio\" value=\"Admin\" name=\"newUser\" /> Admin\n          </div>\n        ) : (\n          <NewDriverAvatar onImageSelect={setSelectedImg} />\n        )}\n        <label>\n          <input\n            placeholder=\" Name...\"\n            type=\"text\"\n            name=\"name\"\n            value={newUsersInfo.name}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, name: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Surname...\"\n            type=\"text\"\n            name=\"surname\"\n            value={newUsersInfo.surname}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, surname: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Email...\"\n            type=\"email\"\n            name=\"email\"\n            value={newUsersInfo.email}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, email: e.target.value })\n            }\n          />\n        </label>\n        {isUser ? (\n          <label>\n            <input\n              placeholder=\"Password...\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n        ) : null}\n        <label>\n          <input\n            placeholder=\"Telephone...\"\n            type=\"text\"\n            name=\"telefon\"\n            value={newUsersInfo.tel}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, tel: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Address...\"\n            type=\"text\"\n            name=\"adress\"\n            value={newUsersInfo.address}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, address: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"City...\"\n            type=\"text\"\n            name=\"city\"\n            value={newUsersInfo.city}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, city: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input type=\"submit\" value=\"Submit\" />\n        </label>\n      </form>\n      <div className=\"newUser__image\">\n        {\n          isUser ?\n            <img src=\"./images/people.png\" alt=\"addUser\" />\n            :\n            <img src=\"./images/car.png\" alt=\"addDriver\" />\n        }\n\n      </div>\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default NewUser;\n","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction IsDriverWorking({\n  drivers,\n  isWorking,\n  setDrivers,\n  callTheDriversApi,\n}) {\n  const handleWorkingSituation = (value, i) => {\n    // MAIN\n    const url = `/drivers/${value._id}`;\n    \n    // DEV\n    // const url = `http://localhost:2005/drivers/${value._id}`;\n    const options = {\n      method: \"PUT\",\n      body: JSON.stringify({ ...value, isWorking: !isWorking }),\n      headers: {\n        \"Content-type\": \"application/json\", // The type of data you're sending\n      },\n    };\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((result) => {\n        drivers[i] = result;\n        setDrivers(drivers);\n        callTheDriversApi();\n        toast.info(`${value.user.name}'s Work Status Changed... `);\n      });\n  };\n\n  const filteredDrivers = drivers.filter(\n    (driver) => driver.isWorking === isWorking\n  );\n  const lengthOfFilteredDrivers = filteredDrivers.length >= 1;\n  return (\n    <>\n      <div className=\"workingDrivers\">\n        <div className=\"workingDrivers__card\">\n          <div className=\"header\">\n            <h2>\n              {isWorking ? \"Working\" : \"Not Working\"} Drivers\n            </h2>\n          </div>\n          <div className=\"workingDrivers__info\">\n            {lengthOfFilteredDrivers ? (\n              filteredDrivers.map((value, i) => {\n                return (\n                  <p key={i} onClick={() => handleWorkingSituation(value, i)}>\n                    {`${value.user.name} ${value.user.surname}`}\n                  </p>\n                );\n              })\n            ) : (\n              <div>\n                <span >No drivers are listed here.</span>\n                <img src=\"./images/no_driver.svg\" alt=\"no driver\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        // limit={1}\n      />\n    </>\n  );\n}\n\nexport default IsDriverWorking;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport IsDriverWorking from \"../components/IsDriverWorking.jsx\";\n\nfunction SelectDrivers() {\n  const [drivers, setDrivers] = useState([]);\n\n  const callTheDriversApi = () => {\n    // MAIN\n    const url = `/drivers`;\n\n    // DEV\n    // const url = `http://localhost:2005/drivers`;\n\n    api.fetchDataFromDB(url).then((result) => {\n      setDrivers(result);\n    });\n  };\n\n  useEffect(() => {\n    callTheDriversApi();\n  }, []);\n\n  return (\n    <div className=\"allDrivers__container\">\n      <IsDriverWorking\n        drivers={drivers}\n        isWorking={true}\n        setDrivers={setDrivers}\n        callTheDriversApi={callTheDriversApi}\n      />\n      <IsDriverWorking\n        drivers={drivers}\n        isWorking={false}\n        setDrivers={setDrivers}\n        callTheDriversApi={callTheDriversApi}\n      />\n    </div>\n  );\n}\n\nexport default SelectDrivers;\n","import React from 'react'\n\nexport default function AllDayInfo({ drivers }) {\n\n    const dailyGiro = () => {\n        return drivers.reduce((total, driver) => {\n            let subtotal = driver.deliveries.reduce((total, delivery) => {\n                return parseInt(delivery._id.total) + total;\n            }, 0);\n            return subtotal + total;\n        }, 0);\n    };\n\n    return (\n        <div className=\"summary__day\">\n            <div className=\"svgImg ontheWay\">\n                <img src=\"/images/onTheWay.svg\" alt=\"ontheway\" />\n            </div>\n\n            <div className=\"day__info\">\n                <div className=\"totalOrders\">\n                    <h5>Total<br />Delivered Orders</h5>\n                    <p>\n                        {drivers.reduce(\n                            (previousValue, currentValue) =>\n                                previousValue + parseInt(currentValue.deliveries.length),\n                            0\n                        )}\n                    </p>\n                </div>\n                <div className=\"totalDrivers\">\n                    <h5>Total<br />Number of Drivers</h5>\n                    <p>{drivers.length}</p>\n                </div>\n                <div className=\"totalMoney\">\n                    <h5>Total<br />Earnings</h5>\n                    <p>{dailyGiro()}€</p>\n                </div>\n            </div>\n\n            <div className=\"svgImg money\">\n                <img src=\"/images/money.svg\" alt=\"money\" />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport date from \"../../lib/date.js\";\n\nfunction DeliveryDetail({driver}) {\n    return (\n        <table className=\"withClick\" style={{ display: driver.show }}>\n            <thead>\n                <tr>\n                    <th>Nr.</th>\n                    <th>Client Name</th>\n                    <th>Client Address</th>\n                    <th>Order Date</th>\n                    <th>Price</th>\n                </tr>\n            </thead>\n            <tbody>\n                {driver.deliveries.map((value, i) => {\n                    return (\n                        <tr key={i}>\n                            <td>{i + 1}.</td>\n                            <td>{value._id.customerId.user.name} {value._id.customerId.user.surname}</td>\n                            <td>{value._id.customerId.user.address}</td>\n                            <td>{date.getLocalDate(value._id.date)}</td>\n                            <td>{value._id.total}€</td>\n                        </tr>\n                    )\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default DeliveryDetail\n","import React from 'react'\n\nfunction DriverDetail({ driver }) {\n    return (\n        <div className=\"withoutClick\">\n            <div className=\"name\">\n                <h6>Driver Name</h6>\n                <p>{driver.user.name}</p>\n            </div>\n\n            <div className=\"orders\">\n                <h6>Orders</h6>\n                <p>{driver.deliveries.length}</p>\n            </div>\n\n            <div className=\"name\">\n                <h6>Will Pay</h6>\n                <p>\n                    {driver.deliveries.reduce(\n                        (previousValue, currentValue) =>\n                            previousValue + parseInt(currentValue._id.total),\n                        0\n                    )}\n                    €\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default DriverDetail\n","import React from 'react'\nimport DeliveryDetail from \"./DeliveryDetail.jsx\";\nimport DriverDetail from './DriverDetail.jsx';\n\nfunction DriverList({ drivers, setDrivers }) {\n    const showDetailsOfDriver = (driver, i) => {\n        driver.show = driver.show === \"none\" ? \"block\" : \"none\";\n        const newDrivers = [...drivers];\n        setDrivers(newDrivers);\n    };\n\n    return (\n        <div className=\"drivers__container\">\n            {drivers.map((driver, i) => {\n                return (\n                    <div\n                        key={i}\n                        className=\"card__items\"\n                        onClick={() => showDetailsOfDriver(driver, i)}\n                    >\n                        <DriverDetail driver={driver} />\n                        <DeliveryDetail driver={driver} />\n                    </div>\n                );\n            })}\n        </div>\n    )\n}\n\nexport default DriverList\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport AllDayInfo from \"../components/Summary/AllDayInfo.jsx\";\nimport DriverList from \"../components/Summary/DriverList.jsx\";\n\nfunction Summary() {\n  const [drivers, setDrivers] = useState([]);\n\n  // MAIN\n  const url = `/drivers`;\n  \n  // DEV\n  // const url = `http://localhost:2005/drivers`;\n\n  useEffect(() => {\n    api.fetchDataFromDB(url).then((result) => {\n      const workedDrivers = result.filter((value, index) => {\n        value.show = \"none\";\n        return value.deliveries.length > 0;\n      });\n      setDrivers(workedDrivers);\n    });\n  }, [url]);\n\n\n  return (\n    <div className=\"summary__container\">\n      <h2>All Activities for Today</h2>\n\n      {/* General Info */}\n      <AllDayInfo drivers={drivers} />\n\n      {/* Driver List */}\n      <DriverList drivers={drivers} setDrivers={setDrivers} />\n    </div>\n  );\n}\n\nexport default Summary;\n","import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nfunction Register() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    let history = useHistory();\n    const newUser = {\n        password: password,\n        isAdmin: true,\n    }\n\n    // MAIN\n    const url = `/users/${email}`;\n\n    // DEV\n    // const url = `http://localhost:2005/users/${email}`;\n\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(newUser),\n        headers: {\n            \"Content-type\": \"application/json\", // The type of data you're sending\n        }\n    };\n\n    const isAdmin = () => {\n        fetch(url, options).then(result => {\n            if (result.ok) {\n                // setIsLogin(true);\n                history.push(\"/\");\n            }\n            else {\n                history.push(\"/newdriver\");\n            }\n        });\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setEmail(\"\");\n        setPassword(\"\");\n        isAdmin();\n    }\n\n    return (\n        <div className=\"mainLogin\">\n            <form className=\"container\" onSubmit={submitForm}>\n                <h4>Register</h4>\n                <label htmlFor=\"email\">\n                    <b>Email</b>\n                </label>\n\n                <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n\n                <label htmlFor=\"psw\">\n                    <b>Password</b>\n                </label>\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                    name=\"psw\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n                <button type=\"submit\" className=\"loginButton\" >Register</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Register\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar.jsx\";\nimport Home from \"../pages/Home.jsx\";\nimport Orders from \"../pages/Orders.jsx\";\nimport NewUser from \"../pages/NewUser.jsx\";\nimport SelectDrivers from \"../pages/SelectDrivers.jsx\";\nimport Summary from \"../pages/Summary.jsx\";\nimport Login from \"../pages/Login.jsx\";\nimport Register from \"../pages/Register.jsx\";\nimport { MenuItems } from \"../components/MenuItems.jsx\";\n\nfunction Admin({ setIsLogin }) {\n    console.log(\"admin hat sich gerendert\");\n    const [click, setClick] = useState(false);\n\n    return (\n        <BrowserRouter>\n            <NavBar\n                click={click}\n                setClick={setClick}\n                isLogin={true}\n                setIsLogin={setIsLogin}\n            />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home click={click} />\n                </Route>\n                <Route path=\"/orders\">\n                    <Orders click={click} />\n                </Route>\n                <Route path=\"/newuser\">\n                    <NewUser newUser={MenuItems[0]} />\n                </Route>\n                <Route path=\"/newdriver\">\n                    <NewUser newUser={MenuItems[1]} />\n                </Route>\n                <Route path=\"/selectdrivers\">\n                    {!click && <SelectDrivers />}\n                </Route>\n                <Route path=\"/summary\">\n                    {!click && <Summary />}\n                </Route>\n                <Route path=\"/login\">\n                    <Login setIsLogin={setIsLogin} />\n                </Route>\n                <Route path=\"/register\">\n                    <Register />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Admin\n","import React, { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login.jsx\";\nimport Admin from \"./pages/Admin.jsx\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(() => {\n    const lcSt = JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n    return lcSt ? lcSt : false;\n  });\n\n  const checkAuth = async () => {\n    // MAIN\n    const url = `/auth`;\n    \n    // DEV\n    // const url = `http://localhost:2005/auth`;\n\n    const options = {\n      credentials: \"include\",\n    };\n    const data = await fetch(url, options);\n    const res = await data.json();\n    if (res.token) {\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(true));\n      setIsLogin(true);\n    } else if (data.status === 401) {\n      setIsLogin(false);\n    }\n  };\n\n  useEffect(() => {\n    const lcSt = JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n    if (lcSt === null) {\n      checkAuth();\n    } else if (lcSt) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\" >\n      {isLogin ? (\n        <Admin setIsLogin={setIsLogin} />\n      ) : (\n        <Login setIsLogin={setIsLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}