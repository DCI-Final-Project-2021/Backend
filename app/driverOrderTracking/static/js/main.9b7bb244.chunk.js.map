{"version":3,"sources":["pages/Login.jsx","components/MenuItems.jsx","components/Dropdown.jsx","components/NavBar.jsx","components/DriverCard.jsx","api/fetchDataFromDB.js","components/ModalForDrivers.jsx","components/Orders/ModalForOrders.jsx","components/Orders/OrderInfo.jsx","components/Orders/ClientInfo.jsx","components/Orders/DriverInfo.jsx","components/Orders/OrderCard.jsx","pages/Home.jsx","pages/Orders.jsx","components/newDriver/NewDriverAvatar.jsx","pages/NewUser.jsx","components/IsDriverWorking.jsx","pages/SelectDrivers.jsx","components/Summary/AllDayInfo.jsx","components/Summary/DeliveryDetail.jsx","components/Summary/DriverDetail.jsx","components/Summary/DriverList.jsx","pages/Summary.jsx","pages/Register.jsx","pages/Admin.jsx","App.js","index.js"],"names":["dotenv","config","Login","setIsLogin","useState","email","setEmail","password","setPassword","url","process","API_SERVER","options","method","body","JSON","stringify","headers","credentials","className","src","alt","onSubmit","e","preventDefault","fetch","then","result","console","log","ok","localStorage","setItem","status","toast","error","type","placeholder","name","required","value","onChange","target","theme","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","MenuItems","title","path","Dropdown","closeMobileMenu","click","setClick","onClick","map","item","index","to","Navbar","isLogin","dropdown","setDropdown","DriverCard","driver","key","addDrivertoOrder","img","width","height","size","color","user","fetchDataFromDB","a","response","json","jsonData","postDataFromDB","putDataFromDB","api","ModalForDrivers","props","drivers","setDrivers","useEffect","workingDrivers","filter","isWorking","callTheDriversApi","selectedOrder","_id","callTheApi","success","toastId","onHide","Modal","centered","Header","closeButton","Title","id","Body","i","Footer","Button","limit","ModalForOrders","foods","food","category","price","count","slice","OrderInfo","order","setOrderModalShow","setSelectedOrder","push","join","length","makeFood","date","total","ClientInfo","customerId","surname","address","tel","DriverInfo","setModalShow","isDelivered","OrderCard","orderInfo","modalShow","orderModalShow","show","Home","setOrderInfo","deliveredOrders","reverse","Orders","NewDriverAvatar","onImageSelect","file","setFile","accept","event","URL","createObjectURL","files","htmlFor","fontSize","INITIAL_USER","city","NewUser","newUser","newUsersInfo","setNewUsersInfo","selectedImg","setSelectedImg","imgRef","useRef","isUser","uploadImg","image","formData","FormData","append","Axios","post","addANewUser","isFieldsMissing","Object","keys","some","fetchUrl","current","data","err","autoComplete","defaultChecked","IsDriverWorking","filteredDrivers","lengthOfFilteredDrivers","info","handleWorkingSituation","SelectDrivers","AllDayInfo","reduce","previousValue","currentValue","parseInt","deliveries","subtotal","delivery","DeliveryDetail","style","display","DriverDetail","DriverList","newDrivers","showDetailsOfDriver","Summary","workedDrivers","Register","history","useHistory","isAdmin","Admin","NavBar","exact","App","lcSt","parse","getItem","checkAuth","token","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b7bb244.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Login({ setIsLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const url = `${process.env.API_SERVER}/users/login`;\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-type\": \"application/json\", // The type of data you're sending\n    },\n    credentials: 'include',\n  };\n  const isAdmin = () => {\n    fetch(url, options).then(result => {\n      console.log(\"isadminfunction\", result);\n      if (result.ok) {\n        setIsLogin(true);\n        localStorage.setItem(\"isLoggedIn\", JSON.stringify(true));\n        <Redirect to=\"/\" />;\n      } else if (result.status === 401) {\n        setIsLogin(false);\n        toast.error(\"Username or password is incorrect.\");\n        return\n      }\n    });\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setEmail(\"\");\n    setPassword(\"\");\n    isAdmin();\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"logo\">\n        <img src={\"/images/login_logo.png\"} alt=\"delivery_logo\" />\n      </div>\n      <h1>Driver &amp; Order <br />Tracking</h1>\n\n      <form onSubmit={submitForm}>\n        <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n        <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n        <input type=\"submit\" className=\"loginButton\" value=\"Login\" />\n      </form>\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  )\n}\n\nexport default Login;\n","export const MenuItems = [\n  {\n    name: \"User\",\n    title: \"New Admin\",\n    path: \"/newuser\",\n  },\n  {\n    name: \"Driver\",\n    title: \"New Driver\",\n    path: \"/newdriver\",\n  },\n  // {\n  //   name: \"Staff\",\n  //   title: \"New Staff\",\n  //   path: \"/newdriver\",\n  //   fetch: \"users\" // burasi sikintili\n  // }\n];\n","import React, { useState } from \"react\";\nimport { MenuItems } from \"./MenuItems\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dropdown({ closeMobileMenu }) {\n  const [click, setClick] = useState(false);\n\n  const handleClick = () => setClick(!click);\n\n  return (\n    <ul\n      onClick={handleClick}\n    >\n      {MenuItems.map((item, index) => {\n        return (\n          <li key={index}>\n            <Link\n              to={item.path}\n              onClick={() => {\n                closeMobileMenu();\n              }}\n            >\n              {item.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Dropdown from \"./Dropdown\";\n\nfunction Navbar({ click, setClick, isLogin, setIsLogin }) {\n  const [dropdown, setDropdown] = useState(false);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => {\n    setClick(false);\n    setDropdown(false);\n  };\n\n  const toggleDropdown = () => {\n    setDropdown(!dropdown);\n  }\n\n  const logoutUser = () => {\n    localStorage.setItem(\"isLoggedIn\", JSON.stringify(false))\n    setIsLogin(false);\n  }\n\n  return (\n    <>\n      <nav>\n        <Link to=\"/\" className=\"nav-logo\" onClick={closeMobileMenu}>\n          Order Tracking\n          <i className=\"fas fa-shipping-fast\"></i>\n        </Link>\n\n        <div className=\"menu-icon\" onClick={handleClick}>\n          <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\n        </div>\n\n        <div className=\"menu\">\n          <ul className={click ? \"active\" : \"\"}>\n            <li>\n              <Link to=\"/\" onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"/selectdrivers\" onClick={closeMobileMenu}>\n                Select Driver\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"/orders\" onClick={closeMobileMenu}>\n                Orders\n              </Link>\n            </li>\n\n            {isLogin && (\n              <li>\n                <Link to=\"/summary\" onClick={closeMobileMenu}>\n                  Summary\n                </Link>\n              </li>\n            )\n            }\n\n            {isLogin ?\n              (\n                <>\n                  <li onClick={toggleDropdown}>\n                    <Link to=\"#\" onClick={closeMobileMenu}>\n                      <i className=\"fas fa-user-plus\"></i>\n                    </Link>\n                    <div className=\"dropdown\" >\n                      {dropdown && <Dropdown closeMobileMenu={closeMobileMenu} />}\n                    </div>\n                  </li>\n                  <li>\n                    <Link to=\"/\" onClick={logoutUser}>\n                      <i className=\"fas fa-sign-out-alt\"></i>\n                    </Link>\n                  </li>\n                </>\n              )\n              :\n              (\n                <Link to=\"/login\" onClick={closeMobileMenu}>\n                  Login\n                </Link>\n              )\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BsFillPersonFill } from \"react-icons/bs\";\n\nfunction DriverCard({ driver, key, addDrivertoOrder }) {\n  return (\n    <div\n      className=\"driverCard\"\n      key={key}\n      onClick={() => addDrivertoOrder(driver)}\n    >\n      <div className=\"driverPhoto\">\n        {driver.img ? (\n          <img width=\"60px\" height=\"70px\" src={driver.img} alt=\"\" />\n        ) : (\n          <BsFillPersonFill size=\"2em\" color=\"black\" />\n        )}\n      </div>\n      <div className=\"info\">\n        <p>Name : {driver.user.name} </p>\n        <p>Status : {driver.status} </p>\n      </div>\n    </div>\n  );\n}\n\nexport default DriverCard;\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nconst fetchDataFromDB = async function (url) {\n  try {\n    const options = {\n      credentials: 'include',\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst postDataFromDB = async function (url, body) {\n  try {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      credentials: 'include',\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst putDataFromDB = async function (email) {\n  try {\n    const url = `${process.env.API_SERVER}/users/${email}`;\n    const options = {\n      method: \"PUT\",\n      body: \"\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      }\n    };\n    return await fetch(url, options)\n      .then((response) => response.json())\n      .then((jsonData) => jsonData.result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst api = {\n    fetchDataFromDB,\n    postDataFromDB,\n    putDataFromDB\n}\n\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport DriverCard from \"./DriverCard\";\nimport api from \"../api/fetchDataFromDB\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction ModalForDrivers(props) {\n  const [drivers, setDrivers] = useState([]);\n\n  \n  const callTheDriversApi = () => {\n    const url = `${process.env.API_SERVER}/drivers`;\n    api.fetchDataFromDB(url).then((result) => {\n      console.log(\"callthedriversapi\", result)\n      const workingDrivers = result.filter(\n        (value, index) => value.isWorking === true\n      );\n      setDrivers(workingDrivers);\n    });\n  }\n  useEffect(() => {\n    callTheDriversApi();\n  }, []);\n\n  const addDrivertoOrder = (driver) => {\n    // Burada hem driver hem de order güncelleniyor.\n    const url = `${process.env.API_SERVER}/orders/${props.selectedOrder._id}/${driver._id}`;\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\", // The type of data you're sending\n      },\n    };\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((result) => {\n        props.callTheApi();\n        const customId = \"custom-id-assign\";\n        toast.success(\" Driver Has Assigned to Order...\", {\n          toastId: customId,\n        });\n        console.log(result);\n      });\n    props.onHide();\n  };\n\n  return (\n    <>\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Select a Driver\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.selectedOrder.driver == null\n            ? drivers.map((driver, i) => {\n              return (\n                <DriverCard\n                  driver={driver}\n                  key={i}\n                  addDrivertoOrder={addDrivertoOrder}\n                />\n              );\n            })\n            : drivers\n              .filter((value) => value._id !== props.selectedOrder.driver._id)\n              .map((driver, i) => {\n                return (\n                  <DriverCard\n                    driver={driver}\n                    key={i}\n                    addDrivertoOrder={addDrivertoOrder}\n                  />\n                );\n              })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button size=\"lg\" onClick={props.onHide}>\n            Done\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        limit={1}\n      />\n    </>\n  );\n}\n\nexport default ModalForDrivers;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction ModalForOrders(props) {\n  console.log(\"ne secildi\", props.selectedOrder);\n  return (\n    <>\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Order Detail\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table>\n            <tr>\n              <th>No</th>\n              <th>Food</th>\n              <th>Category</th>\n              <th>Price</th>\n              <th>Count</th>\n              <th>Subtotal</th>\n            </tr>\n            {props.selectedOrder._id &&\n              props.selectedOrder.foods.map((food, i) => {\n                return (\n                  <>\n                    <tr>\n                      <td>{i + 1}.</td>\n                      <td>{food.name}</td>\n                      <td>{food.category}</td>\n                      <td>{food.price}</td>\n                      <td>{food.count}</td>\n                      <td>{food.count * food.price.slice(0, -1) * 1}€</td>\n                      {/* total += item.count * (item.price.slice(0, -1) * 1); */}\n                    </tr>\n                  </>\n                )\n              })\n            }\n          </table>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button size=\"lg\" onClick={props.onHide}>\n            Done\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        limit={1}\n      />\n    </>\n  );\n}\n\nexport default ModalForOrders;\n","import React from 'react'\n\nfunction OrderInfo({order, setOrderModalShow, setSelectedOrder}) {\n\n    const selectOrderFunc = () => {\n        setOrderModalShow(true);\n        setSelectedOrder(order);\n    }\n\n    const makeFood = (order) => {\n        const food = [];\n        order.foods.map(item => {\n            return food.push(item.name);\n        })\n        console.log(\"food\", food);\n\n        let result = food.join(\", \");\n        if (result.length > 40) {\n            result = result.slice(0, 40) + \" ...\"\n            return result\n        }\n        return result\n    }\n\n    return (\n        <div className=\"orderInfo\" onClick={selectOrderFunc}>\n            <h4>Order Information</h4>\n            <p>Foods: {makeFood(order)}</p>\n            <p className=\"date\">{order.date}</p>\n            {/* <p>Price: {order.total}€</p> */}\n            <p>{order.total}€</p>\n        </div>\n    )\n}\n\nexport default OrderInfo\n","import React from 'react'\n\nfunction ClientInfo({ order }) {\n    return (\n        <div className=\"clientInfo\">\n            <h4>Client Information</h4>\n            <p>Name: {order.customerId.user.name} {order.customerId.user.surname} </p>\n            <p>Address: {order.customerId.user.address} </p>\n            <p>Phone: {order.customerId.user.tel} </p>\n        </div>\n    )\n}\n\nexport default ClientInfo\n","import React from 'react';\nimport { GiHotMeal } from \"react-icons/gi\";\nimport { FaShippingFast } from \"react-icons/fa\";\nimport { GrCompliance } from \"react-icons/gr\";\n\nfunction DriverInfo({ order, setModalShow, setSelectedOrder }) {\n    \n    const selectOrderFunc = () => {\n        setModalShow(true);\n        setSelectedOrder(order);\n    }\n\n    return (\n        <div className=\"driverInfo\" onClick={order.isDelivered ? () => null : selectOrderFunc}>\n            <div className=\"img\">\n                {order.isDelivered ? (\n                    <GrCompliance />\n                ) : order.driver ? (\n                    <FaShippingFast />\n                ) : (\n                    <GiHotMeal />\n                )}\n            </div>\n            <p>\n                {order.driver === null\n                    ? \"There is no driver yet!\"\n                    : `Driver: ${order.driver.user.name}`}\n            </p>\n        </div>\n    )\n}\n\nexport default DriverInfo\n","import React, { useState } from \"react\";\nimport ModalForDrivers from \"../ModalForDrivers\";\nimport ModalForOrders from \"../Orders/ModalForOrders\";\nimport OrderInfo from \"./OrderInfo\";\nimport ClientInfo from \"./ClientInfo\";\nimport DriverInfo from \"./DriverInfo\";\n\nfunction OrderCard({ orderInfo, callTheApi }) {\n  \n  const INITIAL_ORDER = { driver: { _id: \"\" }};\n  const [modalShow, setModalShow] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(INITIAL_ORDER);\n  \n  const [orderModalShow, setOrderModalShow] = useState(false);\n  console.log(\"orderinfo\",orderInfo)\n  return (\n    <>\n      {orderInfo\n        .map((order, i) => {\n          return (\n            <div key={i} className=\"orderCard\">\n              <OrderInfo order={order} setOrderModalShow={setOrderModalShow} setSelectedOrder={setSelectedOrder} />\n              <ClientInfo order={order} />\n              <DriverInfo order={order} setModalShow={setModalShow} setSelectedOrder={setSelectedOrder} />\n            </div>\n          );\n        })\n      }\n      <div className=\"modalWindows\">\n        <ModalForDrivers\n          callTheApi={callTheApi}\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          selectedOrder={selectedOrder}\n        />\n      </div>\n      <div className=\"modalWindows\">\n        <ModalForOrders\n          show={orderModalShow}\n          onHide={() => setOrderModalShow(false)}\n          selectedOrder={selectedOrder}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default OrderCard;\n","import React, { useState, useEffect } from \"react\";\nimport OrderCard from \"../components/Orders/OrderCard.jsx\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Home({ click }) {\n  const [orderInfo, setOrderInfo] = useState([]);\n\n  const callTheApi = () => {\n    const url = `${process.env.API_SERVER}/orders`;\n\n    api.fetchDataFromDB(url).then((result) => {\n      const deliveredOrders = result.filter(\n        (value, index) => value.isDelivered === false\n      );\n      setOrderInfo(deliveredOrders.reverse());\n    });\n  };\n\n  useEffect(() => {\n    callTheApi();\n  }, []);\n\n  return (\n    <div className={!click ? \"hideOrder\" : \"displayOrder\"}>\n      {orderInfo.length === 1\n        ?\n        \"orderInfo bos buraya bos komponent eklenecek\"\n        :\n        (\n          <OrderCard orderInfo={orderInfo} callTheApi={callTheApi} />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport OrderCard from \"../components/Orders/OrderCard.jsx\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Orders() {\n  const [orderInfo, setOrderInfo] = useState([]);\n\n  const url = `${process.env.API_SERVER}/orders`;\n\n  useEffect(() => {\n    api.fetchDataFromDB(url).then((result) => {\n      const deliveredOrders = result.filter(\n        (value, index) => value.isDelivered === true\n      );\n      setOrderInfo(deliveredOrders);\n      console.log(\"useeffect orders.jsx\")\n    });\n  }, [url]);\n  return (\n    <div>\n      <OrderCard orderInfo={orderInfo} />\n    </div>\n  );\n}\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { FiUpload } from \"react-icons/fi\";\n\nfunction NewDriverAvatar({ onImageSelect }) {\n  const [file, setFile] = useState(null);\n\n  const onImageChange = (event) => {\n    const url = URL.createObjectURL(event.target.files[0]);\n    setFile(url);\n    onImageSelect(event.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"avatar-upload\">\n        <div className=\"avatar-edit\">\n          <input\n            type=\"file\"\n            id=\"imageUpload\"\n            accept=\".png, .jpg, .jpeg\"\n            onChange={onImageChange}\n          />\n          <label htmlFor=\"imageUpload\">\n            <FiUpload fontSize=\"20px\"  />\n          </label>\n        </div>\n\n        <div className=\"avatar-preview\">\n          <div id=\"imagePreview\">\n            <img src={file ?? \"/avatar.jpeg\"} alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewDriverAvatar;\n","import React, { useState, useRef } from \"react\";\nimport api from \"../api/fetchDataFromDB\";\nimport NewDriverAvatar from \"../components/newDriver/NewDriverAvatar\";\nimport Axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst INITIAL_USER = {\n  name: \"\",\n  surname: \"\",\n  email: \"\",\n  tel: \"\",\n  address: \"\",\n  city: \"\",\n  type: \"Staff\",\n};\n\nfunction NewUser({ newUser }) {\n  const [newUsersInfo, setNewUsersInfo] = useState(INITIAL_USER);\n  const [selectedImg, setSelectedImg] = useState(null); // Image that user selected (local)\n  const imgRef = useRef(null); // URL from Cloudinary\n  const [password, setPassword] = useState(\"\");\n  const isUser = newUser.name === \"User\" ? true : false;\n\n  const uploadImg = (image) => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", \"dmcrz5sg\");\n\n    return Axios.post(\n      \"https://api.cloudinary.com/v1_1/driverandordertracking/image/upload\",\n      formData\n    );\n  };\n  const addANewUser = async (e) => {\n    e.preventDefault();\n    const isFieldsMissing = Object.keys(INITIAL_USER).some(\n      (key) => newUsersInfo[key] === \"\"\n    );\n\n    if (isUser && (isFieldsMissing || password === \"\")) {\n      console.log(\"burasi mi\");\n      toast.error(\" All fields are required...\");\n      return;\n    } else if (!isUser && (isFieldsMissing || !selectedImg)) {\n      console.log(\"burasi mi veya\");\n      toast.error(\" All fields are required...\");\n      return;\n    }\n\n    try {\n      const fetchUrl = newUser.name === \"Driver\" ? \"drivers\" : newUsersInfo.type === \"Admin\" ? \"users/admin\" : \"users/register\";\n      const url = `${process.env.API_SERVER}/${fetchUrl}`;\n      \n      if (!isUser && !imgRef.current) {\n        imgRef.current = (await uploadImg(selectedImg)).data.url;\n      }\n      const body = isUser\n        ? { ...newUsersInfo, password }\n        : { ...newUsersInfo, img: imgRef.current };\n\n      //Send all data to Database\n      api.postDataFromDB(url, body).then((result) => {\n        // isUser ?\n        //   api.putDataFromDB(result.email)\n        //   :\n        console.log(result);\n      });\n\n      toast.success(`New ${newUser.name} added successfully..`);\n    } catch (err) {\n      console.log({ err });\n    }\n\n    if (isUser) {\n      setNewUsersInfo(INITIAL_USER);\n      setPassword(\"\");\n    } else {\n      setNewUsersInfo(INITIAL_USER);\n    }\n  };\n\n  return (\n    <div className=\"newDriver__container\">\n      <form onSubmit={addANewUser} autoComplete=\"off\">\n        <h2>Add a new {newUser.name}</h2>\n        {isUser ? (\n          <div\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, type: e.target.value })\n            }\n          >\n            User type:\n            <input\n              type=\"radio\"\n              value=\"Staff\"\n              name=\"newUser\"\n              defaultChecked\n            />{\" \"}\n            Staff\n            <input type=\"radio\" value=\"Admin\" name=\"newUser\" /> Admin\n          </div>\n        ) : (\n          <NewDriverAvatar onImageSelect={setSelectedImg} />\n        )}\n        <label>\n          <input\n            placeholder=\" Name...\"\n            type=\"text\"\n            name=\"name\"\n            value={newUsersInfo.name}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, name: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Surname...\"\n            type=\"text\"\n            name=\"surname\"\n            value={newUsersInfo.surname}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, surname: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Email...\"\n            type=\"email\"\n            name=\"email\"\n            value={newUsersInfo.email}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, email: e.target.value })\n            }\n          />\n        </label>\n        {isUser ? (\n          <label>\n            <input\n              placeholder=\"Password...\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n        ) : null}\n        <label>\n          <input\n            placeholder=\"Telephone...\"\n            type=\"text\"\n            name=\"telefon\"\n            value={newUsersInfo.tel}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, tel: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"Address...\"\n            type=\"text\"\n            name=\"adress\"\n            value={newUsersInfo.address}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, address: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input\n            placeholder=\"City...\"\n            type=\"text\"\n            name=\"city\"\n            value={newUsersInfo.city}\n            onChange={(e) =>\n              setNewUsersInfo({ ...newUsersInfo, city: e.target.value })\n            }\n          />\n        </label>\n        <label>\n          <input type=\"submit\" value=\"Submit\" />\n        </label>\n      </form>\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default NewUser;\n","import React from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction IsDriverWorking({ drivers, isWorking, setDrivers, callTheDriversApi }) {\n\n  const handleWorkingSituation = (value, i) => {\n    const url = `${process.env.API_SERVER}/drivers/${value._id}`;\n    const options = {\n      method: \"PUT\",\n      body: JSON.stringify({ ...value, isWorking: !isWorking }),\n      headers: {\n        \"Content-type\": \"application/json\", // The type of data you're sending\n      },\n    };\n\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((result) => {\n        drivers[i] = result;\n        setDrivers(drivers);\n        callTheDriversApi();\n        // const customId = \"custom-id-status\";\n        toast.info(`${value.user.name}'s Work Status Changed... `);\n      });\n  };\n\n  const filteredDrivers = drivers.filter(driver => driver.isWorking === isWorking);\n  const lengthOfFilteredDrivers = filteredDrivers.length >= 1;\n  return (\n    <>\n      <div className=\"workingDrivers\">\n        <div className=\"workingDrivers__card\">\n          <div className=\"header\">\n            <h2>{isWorking ? \"Working\" : \"Not Working\"} Drivers</h2>\n          </div>\n          <div className=\"workingDrivers__info\">\n            {lengthOfFilteredDrivers ?\n              filteredDrivers.map((value, i) => {\n                return (\n                  <p key={i} onClick={() => handleWorkingSituation(value, i)}>\n                    {`${value.user.name} ${value.user.surname}`}\n                  </p>\n                );\n              })\n              :\n              <>\n                <img src=\"./images/nodriver\" alt=\"no driver\"/>\n                <p>No <span>{isWorking ? \"Working\" : \"Not Working\"}</span> drivers are listed here.</p>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n\n      <ToastContainer\n        theme=\"colored\"\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      // limit={1}\n      />\n    </>\n  );\n}\n\nexport default IsDriverWorking;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport IsDriverWorking from \"../components/IsDriverWorking.jsx\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction SelectDrivers() {\n  const [drivers, setDrivers] = useState([]);\n\n  const callTheDriversApi = () => {\n    const url = `${process.env.API_SERVER}/drivers`;\n\n    api.fetchDataFromDB(url).then((result) => {\n      setDrivers(result);\n      console.log(\"useeffect selectdrivers.jsx\");\n    });\n  };\n\n  useEffect(() => {\n    callTheDriversApi();\n  }, []);\n\n  return (\n    <div className=\"allDrivers__container\">\n      <IsDriverWorking\n        drivers={drivers}\n        isWorking={true}\n        setDrivers={setDrivers}\n        callTheDriversApi={callTheDriversApi}\n      />\n      <IsDriverWorking\n        drivers={drivers}\n        isWorking={false}\n        setDrivers={setDrivers}\n        callTheDriversApi={callTheDriversApi}\n      />\n    </div>\n  );\n}\n\nexport default SelectDrivers;\n","import React from 'react'\n\nexport default function AllDayInfo({ drivers }) {\n\n    const dailyGiro = () => {\n        return drivers.reduce((total, driver) => {\n            let subtotal = driver.deliveries.reduce((total, delivery) => {\n                return parseInt(delivery._id.total) + total;\n            }, 0);\n            return subtotal + total;\n        }, 0);\n    };\n\n    return (\n        <div className=\"summary__day\">\n            <div className=\"svgImg ontheWay\">\n                <img src=\"/images/onTheWay.svg\" alt=\"ontheway\" />\n            </div>\n\n            <div className=\"day__info\">\n                <div className=\"totalOrders\">\n                    <h5>Total<br />Delivered Orders</h5>\n                    <p>\n                        {drivers.reduce(\n                            (previousValue, currentValue) =>\n                                previousValue + parseInt(currentValue.deliveries.length),\n                            0\n                        )}\n                    </p>\n                </div>\n                <div className=\"totalDrivers\">\n                    <h5>Total<br />Number of Drivers</h5>\n                    <p>{drivers.length}</p>\n                </div>\n                <div className=\"totalMoney\">\n                    <h5>Total<br />Earnings</h5>\n                    <p>{dailyGiro()}€</p>\n                </div>\n            </div>\n\n            <div className=\"svgImg money\">\n                <img src=\"/images/money.svg\" alt=\"money\" />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction DeliveryDetail({driver}) {\n    return (\n        <table className=\"withClick\" style={{ display: driver.show }}>\n            <thead>\n                <tr>\n                    <th>Nr.</th>\n                    <th>Client Name</th>\n                    <th>Client Address</th>\n                    <th>Order Date</th>\n                    <th>Price</th>\n                </tr>\n            </thead>\n            <tbody>\n                {driver.deliveries.map((value, i) => {\n                    return (\n                        <tr key={i}>\n                            <td>{i + 1}.</td>\n                            <td>{value._id.customerId.user.name} {value._id.customerId.user.surname}</td>\n                            <td>{value._id.customerId.user.address}</td>\n                            <td>{value._id.date}</td>\n                            <td>{value._id.total}€</td>\n                        </tr>\n                    )\n                }\n                )}\n            </tbody>\n        </table>\n    )\n}\n\nexport default DeliveryDetail\n","import React from 'react'\n\nfunction DriverDetail({ driver }) {\n    return (\n        <div className=\"withoutClick\">\n            <div className=\"name\">\n                <h6>Driver Name</h6>\n                <p>{driver.user.name}</p>\n            </div>\n\n            <div className=\"orders\">\n                <h6>Orders</h6>\n                <p>{driver.deliveries.length}</p>\n            </div>\n\n            <div className=\"name\">\n                <h6>Will Pay</h6>\n                <p>\n                    {driver.deliveries.reduce(\n                        (previousValue, currentValue) =>\n                            previousValue + parseInt(currentValue._id.total),\n                        0\n                    )}\n                    €\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default DriverDetail\n","import React from 'react'\nimport DeliveryDetail from \"./DeliveryDetail.jsx\";\nimport DriverDetail from './DriverDetail.jsx';\n\nfunction DriverList({ drivers, setDrivers }) {\n\n    const showDetailsOfDriver = (driver, i) => {\n        driver.show = driver.show === \"none\" ? \"block\" : \"none\";\n        const newDrivers = [...drivers];\n        setDrivers(newDrivers);\n    };\n\n    return (\n        <div className=\"drivers__container\">\n            {drivers.map((driver, i) => {\n                return (\n                    <div\n                        key={i}\n                        className=\"card__items\"\n                        onClick={() => showDetailsOfDriver(driver, i)}\n                    >\n                        <DriverDetail driver={driver} />\n                        <DeliveryDetail driver={driver} />\n                    </div>\n                );\n            })}\n        </div>\n    )\n}\n\nexport default DriverList\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../api/fetchDataFromDB.js\";\nimport AllDayInfo from \"../components/Summary/AllDayInfo.jsx\";\nimport DriverList from \"../components/Summary/DriverList.jsx\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Summary() {\n  const [drivers, setDrivers] = useState([]);\n\n  const url = `${process.env.API_SERVER}/drivers`;\n\n  useEffect(() => {\n    api.fetchDataFromDB(url).then((result) => {\n      const workedDrivers = result.filter((value, index) => {\n        value.show = \"none\";\n        return value.deliveries.length > 0;\n      });\n      setDrivers(workedDrivers);\n      console.log(\"useeffect summary.jsx\");\n    });\n  }, [url]);\n\n\n  return (\n    <div className=\"summary__container\">\n      <h2>All Activities for Today</h2>\n\n      {/* General Info */}\n      <AllDayInfo drivers={drivers} />\n\n      {/* Driver List */}\n      <DriverList drivers={drivers} setDrivers={setDrivers} />\n    </div>\n  );\n}\n\nexport default Summary;\n","import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Register() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    let history = useHistory();\n\n    //req.body.name, req.body.surname, req.body.email, req.body.tel, req.body.address, req.body.city\n\nconst newUser = {\n    password: password,\n    isAdmin: true,\n}\n// const newUser = {\n//     name: \"Ali\",\n//     surname: \"Veli\",\n//     email: email,\n//     password: password,\n//     tel: \"1341234\",\n//     address: \"Zuhause\",\n//     city: \"Hamburg\",\n//     isAdmin: true,\n//     // tip: \"kitchen\"\n// }\n\n\n    const url = `${process.env.API_SERVER}/users/${email}`;\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(newUser),\n        headers: {\n            \"Content-type\": \"application/json\", // The type of data you're sending\n        }\n    };\n    const isAdmin = () => {\n        fetch(url, options).then(result => {\n            if (result.ok) {\n                // setIsLogin(true);\n                history.push(\"/\");\n            }\n            else {\n                history.push(\"/newdriver\");\n            }\n        });\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        setEmail(\"\");\n        setPassword(\"\");\n        isAdmin();\n    }\n\n    return (\n        <div className=\"mainLogin\">\n            <form className=\"container\" onSubmit={submitForm}>\n                <h4>Register</h4>\n                <label htmlFor=\"email\">\n                    <b>Email</b>\n                </label>\n\n                <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n\n                <label htmlFor=\"psw\">\n                    <b>Password</b>\n                </label>\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter Password\"\n                    name=\"psw\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n                <button type=\"submit\" className=\"loginButton\" >Register</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Register\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar.jsx\";\nimport Home from \"../pages/Home.jsx\";\nimport Orders from \"../pages/Orders.jsx\";\nimport NewUser from \"../pages/NewUser.jsx\";\nimport SelectDrivers from \"../pages/SelectDrivers.jsx\";\nimport Summary from \"../pages/Summary.jsx\";\nimport Login from \"../pages/Login.jsx\";\nimport Register from \"../pages/Register.jsx\";\nimport { MenuItems } from \"../components/MenuItems.jsx\";\n\nfunction Admin({ setIsLogin }) {\n    const [click, setClick] = useState(false);\n\n    return (\n        <BrowserRouter>\n            <NavBar\n                click={click}\n                setClick={setClick}\n                isLogin={true}\n                setIsLogin={setIsLogin}\n            />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home click={click} />\n                </Route>\n                <Route path=\"/orders\">\n                    <Orders />\n                </Route>\n                <Route path=\"/newuser\">\n                    <NewUser newUser={MenuItems[0]} />\n                </Route>\n                <Route path=\"/newdriver\">\n                    <NewUser newUser={MenuItems[1]} />\n                </Route>\n                <Route path=\"/selectdrivers\">\n                    <SelectDrivers />\n                </Route>\n                <Route path=\"/summary\">\n                    <Summary />\n                </Route>\n                <Route path=\"/login\">\n                    <Login setIsLogin={setIsLogin} />\n                </Route>\n                <Route path=\"/register\">\n                    <Register />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Admin\n","import React, { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login.jsx\";\nimport Admin from \"./pages/Admin.jsx\";\nimport \"./App.css\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(() => {\n    const lcSt = JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n    return lcSt ? lcSt : false;\n  });\n\n  const checkAuth = async () => {\n    const url = `${process.env.API_SERVER}/auth`;\n    const options = {\n      credentials: \"include\",\n    };\n    const data = await fetch(url, options);\n    const res = await data.json();\n    if (res.token) {\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(true));\n      setIsLogin(true);\n    } else if (data.status === 401) {\n      setIsLogin(false);\n    }\n  };\n\n  useEffect(() => {\n    const lcSt = JSON.parse(localStorage.getItem(\"isLoggedIn\"));\n    if (lcSt === null) {\n      checkAuth();\n    } else if (lcSt) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {isLogin ? (\n        <Admin setIsLogin={setIsLogin} />\n      ) : (\n        <Login setIsLogin={setIsLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}